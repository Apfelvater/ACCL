

================================================================
== Vitis HLS Report for 'cyt_rdma_tx_Pipeline_VITIS_LOOP_65_2'
================================================================
* Date:           Sat Dec 30 12:25:00 2023

* Version:        2022.2 (Build 3670227 on Oct 13 2022)
* Project:        dummy_cyt_rdma_stack
* Solution:       sol1 (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcu280-fsvh2892-2L-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  4.00 ns|  2.111 ns|     1.08 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_65_2  |        ?|        ?|         1|          1|          1|     ?|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 1


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 1
  Pipeline-0 : II = 1, D = 1, States = { 1 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.11>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 4 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%specaxissidechannel_ln0 = specaxissidechannel void @_ssdm_op_SpecAXISSideChannel, i512 %send_data_V_data_V, i64 %send_data_V_keep_V, i64 %send_data_V_strb_V, i1 0, i1 %send_data_V_last_V, i1 0, i8 %send_data_V_dest_V, void @empty_4"   --->   Operation 5 'specaxissidechannel' 'specaxissidechannel_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%specaxissidechannel_ln0 = specaxissidechannel void @_ssdm_op_SpecAXISSideChannel, i512 %tx_V_data_V, i64 %tx_V_keep_V, i64 %tx_V_strb_V, i1 0, i1 %tx_V_last_V, i1 0, i8 %tx_V_dest_V, void @empty_1"   --->   Operation 6 'specaxissidechannel' 'specaxissidechannel_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i512 %send_data_V_data_V, i64 %send_data_V_keep_V, i64 %send_data_V_strb_V, i1 %send_data_V_last_V, i8 %send_data_V_dest_V, void @empty_2, i32 0, i32 0, void @empty_8, i32 0, i32 0, void @empty_6, void @empty_6, void @empty_6, i32 0, i32 0, i32 0, i32 0, void @empty_6, void @empty_6, i32 4294967295, i32 0"   --->   Operation 7 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i512 %tx_V_data_V, i64 %tx_V_keep_V, i64 %tx_V_strb_V, i1 %tx_V_last_V, i8 %tx_V_dest_V, void @empty_2, i32 0, i32 0, void @empty_8, i32 0, i32 0, void @empty_6, void @empty_6, void @empty_6, i32 0, i32 0, i32 0, i32 0, void @empty_6, void @empty_6, i32 4294967295, i32 0"   --->   Operation 8 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%tx_word_dest_V_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %tx_word_dest_V"   --->   Operation 9 'read' 'tx_word_dest_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.38ns)   --->   "%store_ln0 = store i32 0, i32 %i"   --->   Operation 10 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc"   --->   Operation 11 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%i_2 = load i32 %i" [dummy_cyt_rdma_stack.cpp:65]   --->   Operation 12 'load' 'i_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%specpipeline_ln66 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_6" [dummy_cyt_rdma_stack.cpp:66]   --->   Operation 13 'specpipeline' 'specpipeline_ln66' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @empty_11"   --->   Operation 14 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%empty = read i649 @_ssdm_op_Read.axis.volatile.i512P0A.i64P0A.i64P0A.i1P0A.i8P0A, i512 %send_data_V_data_V, i64 %send_data_V_keep_V, i64 %send_data_V_strb_V, i1 %send_data_V_last_V, i8 %send_data_V_dest_V"   --->   Operation 15 'read' 'empty' <Predicate = true> <Delay = 0.00> <CoreInst = "axis">   --->   Core 123 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%tmp_data_V = extractvalue i649 %empty"   --->   Operation 16 'extractvalue' 'tmp_data_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%tmp_keep_V = extractvalue i649 %empty"   --->   Operation 17 'extractvalue' 'tmp_keep_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%tmp_strb_V = extractvalue i649 %empty"   --->   Operation 18 'extractvalue' 'tmp_strb_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns) (grouped into LUT with out node tmp_last_V_1)   --->   "%tmp_last_V = extractvalue i649 %empty"   --->   Operation 19 'extractvalue' 'tmp_last_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.85ns)   --->   "%icmp_ln69 = icmp_eq  i32 %i_2, i32 4032" [dummy_cyt_rdma_stack.cpp:69]   --->   Operation 20 'icmp' 'icmp_ln69' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 21 [1/1] (0.12ns) (out node of the LUT)   --->   "%tmp_last_V_1 = or i1 %tmp_last_V, i1 %icmp_ln69"   --->   Operation 21 'or' 'tmp_last_V_1' <Predicate = true> <Delay = 0.12> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%write_ln258 = write void @_ssdm_op_Write.axis.volatile.i512P0A.i64P0A.i64P0A.i1P0A.i8P0A, i512 %tx_V_data_V, i64 %tx_V_keep_V, i64 %tx_V_strb_V, i1 %tx_V_last_V, i8 %tx_V_dest_V, i512 %tmp_data_V, i64 %tmp_keep_V, i64 %tmp_strb_V, i1 %tmp_last_V_1, i8 %tx_word_dest_V_read"   --->   Operation 22 'write' 'write_ln258' <Predicate = true> <Delay = 0.00> <CoreInst = "axis">   --->   Core 123 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_1 : Operation 23 [1/1] (0.88ns)   --->   "%i_3 = add i32 %i_2, i32 64" [dummy_cyt_rdma_stack.cpp:65]   --->   Operation 23 'add' 'i_3' <Predicate = true> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%tmp = partselect i20 @_ssdm_op_PartSelect.i20.i32.i32.i32, i32 %i_3, i32 12, i32 31" [dummy_cyt_rdma_stack.cpp:65]   --->   Operation 24 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.72ns)   --->   "%icmp_ln65 = icmp_ne  i20 %tmp, i20 0" [dummy_cyt_rdma_stack.cpp:65]   --->   Operation 25 'icmp' 'icmp_ln65' <Predicate = true> <Delay = 0.72> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 26 [1/1] (0.12ns)   --->   "%or_ln65 = or i1 %tmp_last_V_1, i1 %icmp_ln65" [dummy_cyt_rdma_stack.cpp:65]   --->   Operation 26 'or' 'or_ln65' <Predicate = true> <Delay = 0.12> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%br_ln65 = br i1 %or_ln65, void %for.inc.for.inc_crit_edge, void %for.end.exitStub" [dummy_cyt_rdma_stack.cpp:65]   --->   Operation 27 'br' 'br_ln65' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.38ns)   --->   "%store_ln65 = store i32 %i_3, i32 %i" [dummy_cyt_rdma_stack.cpp:65]   --->   Operation 28 'store' 'store_ln65' <Predicate = (!or_ln65)> <Delay = 0.38>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%br_ln65 = br void %for.inc" [dummy_cyt_rdma_stack.cpp:65]   --->   Operation 29 'br' 'br_ln65' <Predicate = (!or_ln65)> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%write_ln247 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %tmp_strb_V_out, i64 %tmp_strb_V"   --->   Operation 30 'write' 'write_ln247' <Predicate = (or_ln65)> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%write_ln65 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %i_1_out, i32 %i_3" [dummy_cyt_rdma_stack.cpp:65]   --->   Operation 31 'write' 'write_ln65' <Predicate = (or_ln65)> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 32 'ret' 'ret_ln0' <Predicate = (or_ln65)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 4ns, clock uncertainty: 1.08ns.

 <State 1>: 2.11ns
The critical path consists of the following:
	'alloca' operation ('i') [14]  (0 ns)
	'load' operation ('i', dummy_cyt_rdma_stack.cpp:65) on local variable 'i' [23]  (0 ns)
	'add' operation ('i', dummy_cyt_rdma_stack.cpp:65) [34]  (0.88 ns)
	'icmp' operation ('icmp_ln65', dummy_cyt_rdma_stack.cpp:65) [36]  (0.722 ns)
	'or' operation ('or_ln65', dummy_cyt_rdma_stack.cpp:65) [37]  (0.122 ns)
	blocking operation 0.387 ns on control path)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
